@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  * {
    @apply border-border;
    image-rendering: pixelated;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
    background: 
      linear-gradient(0deg, rgba(0, 0, 0, 0.1) 1px, transparent 1px),
      linear-gradient(90deg, rgba(0, 0, 0, 0.1) 1px, transparent 1px),
      linear-gradient(rgba(255, 255, 255, 0.99), rgba(255, 255, 255, 0.99));
    background-size: 20px 20px, 20px 20px, cover;
    background-position: center center;
    background-attachment: fixed;
    backdrop-filter: blur(10px);
  }
}

@layer components {
  /* Retro gaming container with enhanced scanlines */
  .retro-container {
    position: relative;
    overflow: hidden;
    border: 4px solid theme('colors.primary.DEFAULT');
    box-shadow: 
      inset 0 0 15px rgba(0, 0, 0, 0.5),
      0 0 15px theme('colors.primary.DEFAULT/0.5');
  }

  .retro-container::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: 
      linear-gradient(
        transparent 50%,
        rgba(0, 0, 0, 0.1) 50%
      ),
      linear-gradient(
        90deg,
        rgba(255, 0, 0, 0.06),
        rgba(0, 255, 0, 0.02),
        rgba(0, 0, 255, 0.06)
      );
    background-size: 100% 4px, 3px 100%;
    pointer-events: none;
    animation: scanline 6s linear infinite;
  }

  @keyframes scanline {
    0% { background-position: 0 0 }
    100% { background-position: 0 100% }
  }

  /* Enhanced pixel borders */
  .pixel-borders {
    border-style: solid;
    border-width: 4px;
    border-image-slice: 2;
    border-image-width: 2;
    border-image-outset: 0;
    border-image-source: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='6' height='6'><path d='M0 2h2v2H0zM2 0h2v2H2zM4 2h2v2H4zM2 4h2v2H2z' fill='%23000'/></svg>");
    image-rendering: pixelated;
    box-shadow: 
      0 0 0 2px theme('colors.primary.DEFAULT'),
      0 0 20px theme('colors.primary.DEFAULT/0.3');
    transition: all 0.2s steps(2);
  }

  .pixel-borders:hover {
    transform: scale(1.02);
    box-shadow: 
      0 0 0 2px theme('colors.primary.DEFAULT'),
      0 0 30px theme('colors.primary.DEFAULT/0.5');
  }

  /* Enhanced retro button with pixelated shadow */
  .retro-btn {
    position: relative;
    padding: 0.5em 1em;
    transition: all 0.1s steps(2);
    transform-style: preserve-3d;
    transform: translateZ(0);
    text-shadow: 
      2px 2px 0 theme('colors.primary.DEFAULT/0.3'),
      4px 4px 0 rgba(0, 0, 0, 0.2);
  }

  .retro-btn::before {
    content: '';
    position: absolute;
    top: 100%;
    left: 0;
    width: 100%;
    height: 4px;
    background: rgba(0, 0, 0, 0.2);
    transform: rotateX(90deg);
    transform-origin: top;
  }

  .retro-btn:hover {
    transform: translateY(-2px) translateZ(0);
    text-shadow: 
      2px 2px 0 theme('colors.primary.DEFAULT/0.5'),
      6px 6px 0 rgba(0, 0, 0, 0.2);
  }

  .retro-btn:active {
    transform: translateY(2px) translateZ(0);
  }

  /* Enhanced glowing text effect */
  .glow-text {
    text-shadow: 
      0 0 5px theme('colors.primary.DEFAULT/0.5'),
      0 0 10px theme('colors.primary.DEFAULT/0.3'),
      2px 2px 0 rgba(0, 0, 0, 0.3);
    animation: glow 2s steps(4) infinite alternate;
  }

  @keyframes glow {
    from {
      text-shadow: 
        0 0 5px theme('colors.primary.DEFAULT/0.5'),
        0 0 10px theme('colors.primary.DEFAULT/0.3'),
        2px 2px 0 rgba(0, 0, 0, 0.3);
    }
    to {
      text-shadow: 
        0 0 10px theme('colors.primary.DEFAULT/0.7'),
        0 0 20px theme('colors.primary.DEFAULT/0.5'),
        0 0 30px theme('colors.primary.DEFAULT/0.3'),
        2px 2px 0 rgba(0, 0, 0, 0.3);
    }
  }

  /* Enhanced loading animation */
  .retro-loading {
    position: relative;
    overflow: hidden;
    border: 2px solid theme('colors.primary.DEFAULT');
  }

  .retro-loading::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: 
      linear-gradient(
        90deg,
        transparent,
        theme('colors.primary.DEFAULT/0.3'),
        transparent
      );
    animation: loading 1.2s steps(6) infinite;
    transform: skewX(-20deg);
  }

  @keyframes loading {
    from { transform: translateX(-200%) skewX(-20deg); }
    to { transform: translateX(200%) skewX(-20deg); }
  }
}

@keyframes gradient {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

.animate-gradient {
  background-size: 200% 200%;
  animation: gradient 15s ease infinite;
}